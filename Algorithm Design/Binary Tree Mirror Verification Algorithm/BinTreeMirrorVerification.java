/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BinTreeMirrorVerification;
import java.util.*;

/**
 *
 * @author FRISCA
 */
class Node
{
    int data;
    Node left, right;
 
    public Node(int item)
    {
        data = item;
        left = right = null;
    }
}
 
class BinTree_Mirror_Verification
{
    private static boolean verify(Node a, Node b) 
    {
        /* Base case : Both empty */
        if (a == null && b == null)
            return true;
 
        // If only one is empty
        if (a == null || b == null) 
            return false;
 
        /* Both non-empty, compare them recursively
           Note that in recursive calls, we pass left
           of one tree and right of other tree */
        return a.data == b.data
                && verify(a.left, b.right)
                && verify(a.right, b.left);
    }

    // Decodes your encoded data to tree.
    public static Node deserialize(String data) 
    {
        if (data == null || data.length() == 0) {
            return null;
        }
        if(data.startsWith("["))
            data = data.substring(1, data.length());
        if(data.endsWith("]"))
            data = data.substring(0, data.length()-1);

        data = data.replace(" ", ""); // omit any space
        data = data.replace("null", "#");

        Queue<Node> queue = new LinkedList<Node>();
        String[] nodes = data.split(",");

        Node root = new Node(Integer.parseInt(nodes[0]));
        queue.offer(root);
        int i = 1;

        while (!queue.isEmpty() && i < nodes.length) {
            Node curr = queue.poll();
            // left node
            if (nodes[i].equals("#")) {
                curr.left = null;
            } else {
                Node leftNode = new Node(Integer.parseInt(nodes[i]));
                curr.left = leftNode;
                queue.offer(leftNode);
            }

            i++;
            if (i >= nodes.length) {
                break;
            }

            // right node
            if (nodes[i].equals("#")) {
                curr.right = null;
            } else {
                Node rightNode = new Node(Integer.parseInt(nodes[i]));
                curr.right = rightNode;
                queue.offer(rightNode);
            }

            i++;
        }

        return root;
    }

    
    public static void main(String args[])
    {
    	
        
        // case 1
//        String tree1 = "[3,9,20,null,null,15,7]"; 
//        String tree2 = "[3,20,9,7,15]"; 

        // case 2
//         String tree1 = "[5,14,15,null,3,6,9,1]"; 
//         String tree2 = "[5,15,14,9,6,3,null,null,null,null,1]";

        // case 3
         String tree1 = "[3,20,9,null,null,1,5,2,4,null,null,15]"; 
         String tree2 = "[3,9,20,5,1,null,null,null,null,4,2 ,null,15]";
         
         //Experiment of 10
//        String tree1 = "[68, 75, 98, 31, 147, 194, 129, 100, 38, 4]";
//        String tree2 = "[68,98,75,129,194,147,31,null,null,null,null,null,4,38,100]";
        
        //50 nodes
//        String tree1 = "[76, 139, 40, 169, 99, 51, 59, 73, 147, 81, 41, 49, 162, 183, 24, 141, 92, "
//                + "25, 113, 122, 55, 87, 48, 120, 119, 35, 65, 44, 103, 102, 104, 53, 68, 39, 52, 192, 57, 185, "
//                + "178, 30, 4, 175, 58, 93, 27, 121, 149, 3, 77, 2]";
//        String tree2 = "[76,40,139,59,51,99,169,24,183,162,49,41,81,147,73,104,102,103,44,65,35,119,120,48,87,"
//                  + "55,122,113,25,92,141,null,null,null,null,null,null,null,null,null,null,null,null,null,2,77,"
//                  + "3,149,121,27,93,58,175,4,30,178,185,57,192,52,39,68,53]";
        //100 nodes
//        String tree1 = "[136, 132, 163, 126, 174, 46, 182, 118, 36, 120, 4, 172, 81, 129, 113, 190, "
//                + "23, 160, 71, 79, 152, 169, 45, 133, 135, 94, 115, 138, 84, 24, 55, 184, 10, 102, "
//                + "149, 63, 54, 68, 11, 192, 33, 30, 37, 40, 25, 67, 100, 21, 146, 130, 62, 189, 91, 39, "
//                + "103, 12, 191, 141, 117, 28, 92, 108, 107, 114, 47, 65, 6, 38, 16, 83, 9, 51, 197, 61, 89, "
//                + "50, 119, 112, 88, 121, 31, 93, 110, 66, 198, 72, 99, 69, 18, 43, 166, 125, 167, 53, 73, 183, "
//                + "153, 155, 17, 111]";
//        String tree2 = "[136,163,132,182,46,174,126,113,129,81,172,4,120,36,118,55,24,84,138,115,94,135,133,45,169,"
//                + "152,79,71,160,23,190,107,108,92,28,117,141,191,12,103,39,91,189,62,130,146,21,100,67,25,40,37,30,"
//                + "33,192,11,68,54,63,149,102,10,184,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,111,17,155,153,183,73,53,167,"
//                + "125,166,43,18,69,99,72,198,66,110,93,31,121,88,112,119,50,89,61,197,51,9,83,16,38,6,65,47,114]";
        //150 nodes
//        String tree1 = "[175, 158, 198, 85, 154, 131, 129, 95, 109, 84, 41, 23, 106, 196, 132, 57, 82,"
//                + " 91, 48, 143, 12, 29, 155, 5, 55, 17, 58, 7, 190, 139, 116, 63, 67, 146, 68, 162, 61, 88, 119,"
//                + " 138, 13, 14, 114, 152, 33, 8, 161, 145, 62, 191, 69, 186, 194, 125, 76, 20, 96, 134, 101, 123,"
//                + " 16, 100, 34, 148, 15, 112, 72, 56, 60, 150, 104, 193, 176, 117, 103, 28, 74, 37, 183, 187, 133,"
//                + " 136, 122, 18, 153, 167, 200, 127, 25, 31, 26, 168, 93, 81, 157, 180, 45, 27, 1, 135, 65, 50, 39,"
//                + " 19, 75, 59, 113, 174, 99, 11, 171, 172, 78, 36, 140, 164, 87, 90, 111, 102, 80, 137, 199, 40, 38,"
//                + " 54, 147, 83, 189, 51, 163, 77, 86, 115, 3, 73, 43, 128, 44, 107, 2, 47, 178, 195, 10, 35, 142, 170,"
//                + " 149, 197]";
//        String tree2 = "[175,198,158,129,131,154,85,132,196,106,23,41,84,109,95,116,139,190,7,58,17,55,5,155,29,12,143,"
//                + "48,91,82,57,34,100,16,123,101,134,96,20,76,125,194,186,69,191,62,145,161,8,33,152,114,14,13,138,119,"
//                + "88,61,162,68,146,67,63,147,54,38,40,199,137,80,102,111,90,87,164,140,36,78,172,171,11,99,174,113,59,"
//                + "75,19,39,50,65,135,1,27,45,180,157,81,93,168,26,31,25,127,200,167,153,18,122,136,133,187,183,37,74,"
//                + "28,103,117,176,193,104,150,60,56,72,112,15,148,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,197,149,170,142,35,10,195,"
//                + "178,47,2,107,44,128,43,73,3,115,86,77,163,51,189,83]";
        //200 nodes
//        String tree1 = "[103, 198, 86, 13, 21, 156, 101, 155, 38, 149, 180, 92, 49, 165, 19, 157, 109, 184,"
//                + " 60, 11, 95, 106, 81, 66, 44, 189, 70, 136, 125, 73, 52, 111, 78, 117, 186, 51, 89, 129, 175, 192,"
//                + " 122, 166, 76, 163, 72, 24, 30, 141, 42, 63, 161, 8, 41, 84, 29, 147, 178, 151, 94, 168, 123, 112,"
//                + " 10, 115, 104, 62, 7, 172, 15, 143, 142, 82, 171, 97, 98, 164, 126, 133, 18, 174, 182, 36, 39, 193,"
//                + " 1, 35, 113, 197, 57, 177, 26, 140, 32, 23, 91, 188, 199, 33, 110, 9, 65, 167, 6, 96, 144, 47, 77,"
//                + " 134, 176, 127, 90, 137, 80, 132, 99, 131, 160, 130, 116, 105, 185, 128, 17, 2, 45, 59, 93, 138, 102,"
//                + " 119, 107, 40, 14, 61, 88, 190, 162, 54, 69, 181, 28, 50, 146, 179, 169, 108, 75, 148, 46, 5, 195,"
//                + " 31, 145, 83, 191, 56, 16, 53, 67, 120, 194, 43, 150, 58, 173, 3, 48, 153, 196, 34, 170, 114, 187,"
//                + " 64, 158, 37, 79, 121, 159, 22, 25, 85, 152, 74, 55, 200, 124, 87, 118, 27, 183, 20, 154, 135, 68,"
//                + " 71, 139, 4, 100, 12]";
//        
//        String tree2 = "[103,86,198,101,156,21,13,19,165,49,92,180,149,38,155,52,73,125,136,70,189,44,66,81,106,95,11,"
//                + "60,184,109,157,10,112,123,168,94,151,178,147,29,84,41,8,161,63,42,141,30,24,72,163,76,166,122,192,"
//                + "175,129,89,51,186,117,78,111,93,59,45,2,17,128,185,105,116,130,160,131,99,132,80,137,90,127,176,134,"
//                + "77,47,144,96,6,167,65,9,110,33,199,188,91,23,32,140,26,177,57,197,113,35,1,193,39,36,182,174,18,133,"
//                + "126,164,98,97,171,82,142,143,15,172,7,62,104,115,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                + "null,null,null,null,null,12,100,4,139,71,68,135,154,20,183,27,118,87,124,200,55,74,152,85,25,22,159,"
//                + "121,79,37,158,64,187,114,170,34,196,153,48,3,173,58,150,43,194,120,67,53,16,56,191,83,145,31,195,5,46,"
//                + "148,75,108,169,179,146,50,28,181,69,54,162,190,88,61,14,40,107,119,102,138]";
        //250 nodes
//        String tree1 = "[8, 9, 15, 100, 72, 5, 177, 185, 117, 213, 165, 43, 184, 58, 126, 147, 107, 188, 115,"
//                + " 30, 21, 110, 26, 236, 218, 175, 145, 226, 237, 119, 134, 17, 249, 41, 11, 171, 132, 112, 57, 133,"
//                + " 130, 27, 50, 212, 64, 140, 113, 247, 250, 246, 211, 229, 91, 106, 161, 125, 3, 96, 65, 227, 111,"
//                + " 86, 118, 16, 204, 76, 186, 174, 245, 82, 183, 153, 23, 10, 163, 173, 114, 225, 39, 2, 32, 222, 108,"
//                + " 235, 149, 202, 71, 192, 37, 28, 187, 234, 61, 1, 198, 80, 25, 137, 200, 102, 68, 116, 221, 20, 182,"
//                + " 154, 181, 248, 233, 158, 46, 73, 42, 224, 84, 99, 101, 156, 136, 242, 124, 138, 127, 141, 150, 207,"
//                + " 143, 29, 94, 63, 239, 104, 243, 45, 146, 164, 98, 157, 123, 97, 77, 142, 193, 75, 190, 109, 12, 162,"
//                + " 240, 19, 197, 14, 31, 217, 60, 74, 66, 195, 205, 152, 128, 176, 148, 83, 6, 93, 49, 206, 38, 189,"
//                + " 78, 56, 232, 180, 55, 196, 223, 62, 230, 191, 201, 139, 241, 85, 231, 228, 178, 34, 131, 220, 52,"
//                + " 13, 105, 54, 244, 214, 79, 24, 122, 47, 95, 81, 170, 103, 215, 210, 172, 144, 216, 69, 194, 36, 22,"
//                + " 59, 209, 35, 33, 18, 90, 7, 51, 40, 203, 167, 208, 160, 199, 168, 53, 135, 4, 159, 179, 67, 151, 70,"
//                + " 169, 88, 219, 166, 89, 120, 238, 121, 155, 44, 129, 87, 92, 48]";
//         String tree2 = "[8,15,9,177,5,72,100,126,58,184,43,165,213,117,185,134,119,237,226,145,175,218,236,26,110,21,"
//                 + "30,115,188,107,147,118,86,111,227,65,96,3,125,161,106,91,229,211,246,250,247,113,140,64,212,50,27,"
//                 + "130,133,57,112,132,171,11,41,249,17,143,207,150,141,127,138,124,242,136,156,101,99,84,224,42,73,46,"
//                 + "158,233,248,181,154,182,20,221,116,68,102,200,137,25,80,198,1,61,234,187,28,37,192,71,202,149,235,"
//                 + "108,222,32,2,39,225,114,173,163,10,23,153,183,82,245,174,186,76,204,16,null,null,null,null,null,48,"
//                 + "92,87,129,44,155,121,238,120,89,166,219,88,169,70,151,67,179,159,4,135,53,168,199,160,208,167,203,40,"
//                 + "51,7,90,18,33,35,209,59,22,36,194,69,216,144,172,210,215,103,170,81,95,47,122,24,79,214,244,54,105,"
//                 + "13,52,220,131,34,178,228,231,85,241,139,201,191,230,62,223,196,55,180,232,56,78,189,38,206,49,93,6,"
//                 + "83,148,176,128,152,205,195,66,74,60,217,31,14,197,19,240,162,12,109,190,75,193,142,77,97,123,157,98,"
//                 + "164,146,45,243,104,239,63,94,29]";
                //300 nodes
//        String tree1 = "[198, 208, 23, 124, 22, 34, 219, 254, 153, 276, 175, 87, 241, 170, 238, 65, 190, 166,"
//                + " 30, 203, 195, 167, 39, 16, 233, 95, 77, 142, 82, 250, 157, 177, 221, 162, 185, 263, 189, 32, 183,"
//                + " 84, 217, 11, 187, 237, 78, 97, 125, 103, 134, 2, 146, 204, 100, 201, 259, 69, 277, 199, 57, 273, 5,"
//                + " 200, 48, 251, 180, 299, 222, 67, 244, 135, 74, 255, 286, 252, 172, 239, 279, 297, 138, 101, 141, 261,"
//                + " 85, 13, 21, 234, 147, 122, 71, 262, 28, 278, 14, 249, 99, 179, 148, 296, 295, 33, 44, 41, 19, 227,"
//                + " 139, 133, 6, 154, 256, 59, 42, 169, 110, 266, 267, 91, 193, 242, 163, 226, 223, 88, 20, 53, 40, 155,"
//                + " 292, 178, 27, 132, 184, 245, 269, 90, 300, 76, 3, 232, 117, 212, 25, 126, 72, 231, 15, 86, 4, 24, 38,"
//                + " 294, 136, 128, 36, 181, 225, 31, 161, 248, 51, 176, 94, 18, 109, 118, 236, 271, 112, 246, 61, 26, 207,"
//                + " 160, 272, 83, 210, 121, 258, 43, 211, 79, 49, 240, 58, 108, 243, 116, 115, 130, 290, 156, 70, 288,"
//                + " 158, 149, 230, 253, 52, 229, 7, 131, 151, 137, 152, 196, 260, 114, 282, 209, 129, 213, 63, 68, 105,"
//                + " 247, 143, 106, 188, 215, 113, 257, 174, 280, 281, 62, 64, 111, 192, 289, 119, 298, 291, 73, 80, 228,"
//                + " 274, 171, 284, 37, 173, 8, 1, 123, 9, 197, 140, 264, 287, 60, 191, 144, 12, 159, 104, 98, 235, 46,"
//                + " 293, 218, 54, 182, 10, 17, 55, 107, 270, 92, 268, 165, 216, 214, 220, 120, 102, 285, 206, 186, 194,"
//                + " 96, 35, 75, 56, 47, 205, 127, 150, 93, 168, 283, 81, 164, 265, 275, 224, 89, 50, 45, 66, 145, 202,"
//                + " 29]";
//         String tree2 ="[198,23,208,219,34,22,124,238,170,241,87,175,276,153,254,157,250,82,142,77,95,233,16,39,167,195,"
//                 + "203,30,166,190,65,48,200,5,273,57,199,277,69,259,201,100,204,146,2,134,103,125,97,78,237,187,11,217,"
//                 + "84,183,32,189,263,185,162,221,177,292,155,40,53,20,88,223,226,163,242,193,91,267,266,110,169,42,59,"
//                 + "256,154,6,133,139,227,19,41,44,33,295,296,148,179,99,249,14,278,28,262,71,122,147,234,21,13,85,261,"
//                 + "141,101,138,297,279,239,172,252,286,255,74,135,244,67,222,299,180,251,235,98,104,159,12,144,191,60,"
//                 + "287,264,140,197,9,123,1,8,173,37,284,171,274,228,80,73,291,298,119,289,192,111,64,62,281,280,174,257,"
//                 + "113,215,188,106,143,247,105,68,63,213,129,209,282,114,260,196,152,137,151,131,7,229,52,253,230,149,"
//                 + "158,288,70,156,290,130,115,116,243,108,58,240,49,79,211,43,258,121,210,83,272,160,207,26,61,246,112,"
//                 + "271,236,118,109,18,94,176,51,248,161,31,225,181,36,128,136,294,38,24,4,86,15,231,72,126,25,212,117,"
//                 + "232,3,76,300,90,269,245,184,132,27,178,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"
//                 + "null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29,"
//                 + "202,145,66,45,50,89,224,275,265,164,81,283,168,93,150,127,205,47,56,75,35,96,194,186,206,285,102,"
//                 + "120,220,214,216,165,268,92,270,107,55,17,10,182,54,218,293,46]";
         
         
         
         
         
         
         
         
        /* Serialize the input tree */
        System.out.println("Test case 3");
        System.out.print("The first tree is :");
        System.out.println(tree1);
        System.out.println("");
 
        /* Serialize the input tree */
        System.out.print("The second tree is :");
        System.out.println(tree2);
        System.out.println();

        Node rootA = deserialize(tree1);
        Node rootB = deserialize(tree2);
        long startCapturing = System.nanoTime();
        if (verify(rootA, rootB) == true)
            System.out.println("Yes, mirror images");
        else
            System.out.println("No, not mirror images");
        long endCapturing = System.nanoTime();
		long time=(endCapturing-startCapturing)/1000;
		System.out.println("Experimenting Time Complexity is " + time + " Microseconds ");
 
    }
}